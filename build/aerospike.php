<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('aerospike')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_aerospike.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('aerospike.so')) return;
    } else {
      if (!dl('aerospike.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class aerospike {
	const TYPE_INT = 0;

	const TYPE_FLOAT = TYPE_FLOAT;

	const TYPE_STRING = TYPE_STRING;
}

/* PHP Proxy Classes */
class AS_DATA {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		$func = 'AS_DATA_'.$var.'_set';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr,$value);
		if ($var === 'thisown') return swig_aerospike_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		$func = 'AS_DATA_'.$var.'_get';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr);
		if ($var === 'thisown') return swig_aerospike_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if (function_exists('AS_DATA_'.$var.'_get')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_AS_DATA') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_AS_DATA();
	}
}

class AerospikeWP {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'host_key') return AerospikeWP_host_key_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_aerospike_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'host_key') return AerospikeWP_host_key_get($this->_cPtr);
		if ($var === 'thisown') return swig_aerospike_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if (function_exists('AerospikeWP_'.$var.'_get')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __construct($as_hosts,$as_port=null,$as_timeout=null) {
		if (is_resource($as_hosts) && get_resource_type($as_hosts) === '_p_AerospikeWP') {
			$this->_cPtr=$as_hosts;
			return;
		}
		$this->_cPtr=new_AerospikeWP($as_hosts,$as_port,$as_timeout);
	}

	function get($nspace,$set,$key_str) {
		return AerospikeWP_get($this->_cPtr,$nspace,$set,$key_str);
	}

	function isConnected() {
		return AerospikeWP_isConnected($this->_cPtr);
	}

	function getConnectionReusedCount() {
		return AerospikeWP_getConnectionReusedCount($this->_cPtr);
	}
}


?>
